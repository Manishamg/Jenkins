/*pipeline{
    agent{label "node2"}
    stages {
        stage ("clone"){
            steps{
                checkout scm
            }
        }
        stage ("deploy"){
            steps {
                sh " aws s3 cp /var/lib/jenkins/workspace/s3/index.html s3://buc-for-jenkins-deploy/ "
                echo "deploy stage completed"
            }
        }
      stage ("Cache clearing") {
        steps {
          sh "aws cloudfront create-invalidation --distribution-id E15VN56XCEXPX4 --paths '/*' "
            echo "cache clearing stage completed"
        }}
    }
    post{
        success {
            echo "success"
        }
        failure {
            echo "failure"
        }
    }
}*/

pipeline {
    agent any

    environment {
        SONAR_URL = 'http://34.238.165.72:9000'
        SONAR_LOGIN = '1c8ae349b96c5bd64fa896ab56b8f5c6fcfbc4c2'
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout code from Git
                checkout scm
            }
        }

        stage('Build') {
            steps {
                echo "this is just a sample build code"
            }
        }

        stage('SonarQube Scan') {
            steps {
                script {
                    def scannerHome = tool 'sonar-scanner'
                    withSonarQubeEnv('SonarQube Server') {
                        sh "/opt/bin/sonar-scanner -Dsonar.host.url=http://34.238.165.72:9000 -Dsonar.login=1c8ae349b96c5bd64fa896ab56b8f5c6fcfbc4c2"
                    }
                }
            }
        }
    }

    post {
        always {
            echo " this is post step"
        }
    }
}

